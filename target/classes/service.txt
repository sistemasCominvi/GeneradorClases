package @paqueteService;


import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import @nameModel.@nameClase;
import @paqueteClass.repositories.Jdbc@nameClaseRepository;
import @paqueteServiceImpl.I@nameClaseService;


@Service
public class @nameClaseService implements I@nameClaseService{
	@Autowired
	private Jdbc@nameClaseRepository @nameClassMinDao;
	
	@Transactional(readOnly = true)
	@Override
	public List<@nameClase> findAll() {
		return @nameClassMinDao.findAll();
	}

	@Transactional(readOnly = true)
	@Override
	public @nameClase findById(@primaryListKeysParameters) {
		return @nameClassMinDao.findById(@primaryNameKey);
	}

	@Transactional
	@Override
	public @nameClase save(@nameClase @nameClassMin) {
		return @nameClassMinDao.save(@nameClassMin);
	}

	@Transactional
	@Override
	public Boolean saveAll(List<@nameClase> @namePluralClass) {
		return @nameClassMinDao.saveAll(@namePluralClass);
	}

	@Transactional
	@Override
	public @nameClase update(@nameClase @nameClassMin, @primaryListKeysParameters) {
		return @nameClassMinDao.update(@nameClassMin, @primaryNameKey);
	}

	@Transactional
	@Override
	public Boolean removeById(@primaryListKeysParameters) {
		return @nameClassMinDao.removeById(@primaryNameKey);
	}

        @Transactional(readOnly = true)
	@Override
	public @nameClase findOneCustom(String sql) {
		return (@nameClase) 
				@nameClassMinDao
				.regresaObjeto(sql, new Jdbc@nameClaseRepository.@nameClaseRowMapper());
	}

	@Transactional(readOnly = true)
	@Override
	public List<@nameClase> findAllCustom(String sql) {
		return @nameClassMinDao
				.regresaLista(sql, new Jdbc@nameClaseRepository.@nameClaseRowMapper());
	}

}